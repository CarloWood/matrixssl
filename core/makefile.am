# This file is generated by gen_core_makefile_am.awk.
# Any changes made here will be lost!
# Added to the repository anyhow in order to make ./autogen.sh work.

AM_CPPFLAGS =
DEFS = -DMATRIX_CONFIGURATION_INCDIR_FIRST
DEFAULT_INCLUDES = -I @matrixssl_builddir@

# Override according to the type of the system
libcore_s_la_SOURCES=\
 src/memset_s.c src/corelib_main.c src/corelib_trace.c src/corelib_date.c src/corelib_strings.c src/corelib_list.c src/psbuf.c src/psUtil.c src/psStat.c osdep/POSIX/osdep.c osdep/ANSI/osdep_break.c osdep/POSIX/psLog.c osdep/POSIX/psPrnf.c src/c_lib.c src/cl_basic.c src/debug_abort.c src/debug_printf.c src/psprintf.c src/psmalloc.c src/psmalloc_ext.c src/sfzclbuffer.c src/sfzclcalendar.c src/sfzclfastalloc.c src/sfzclfileio.c src/sfzclmalloc.c src/sfzclmemparser.c src/sfzcltimemeasure.c src/sfzclobstack.c src/sfzclsnprintf.c src/sfzclbase64.c src/sfzclstr.c src/sfzcltime.c osdep/ANSI/spal_memory_ansi.c src/utils.c osdep/POSIX/spal_posix_mutex.c osdep/POSIX/spal_posix_semaphore.c osdep/POSIX/spal_posix_sleep.c osdep/POSIX/spal_posix_thread.c src/sl_cpu.c src/sl_neon.c osdep/src/cl_memset.c osdep/src/runtime.c
libcore_s_la_LIBADD = libsfzutf_s.la libtestsupp_s.la

# Flags for garbage collection to allow selection of a subset of libcore_s.a.
CFLAGS_GARBAGE_COLLECTION ?= -ffunction-sections -fdata-sections

noinst_LTLIBRARIES = libcore_s.la libsfzutf_s.la libtestsupp_s.la
libcore_s_la_API = core
libcore_s_la_CFLAGS = $(core_API_CFLAGS) $(CFLAGS_POSITION_INDEPENDENT) $(CFLAGS_GARBAGE_COLLECTION)

libsfzutf_s_la_SOURCES = testsupp/src/sfzutf/sfzutf.c testsupp/src/sfzutf/sfzutf-heap.c testsupp/src/sfzutf/sfzutf_interactive.c testsupp/src/sfzutf/sfzutf_main_stdio.c testsupp/src/sfzutf/sfzutf-perf.c testsupp/src/sfzutf/sfzutf-stack.c testsupp/src/sfzutf/sfzutf-utils.c
libsfzutf_s_la_API = core sfzutf
libsfzutf_s_la_CFLAGS = $(core_API_CFLAGS) $(sfzutf_API_CFLAGS) $(CFLAGS_POSITION_INDEPENDENT)

libtestsupp_s_la_SOURCES = testsupp/src/testsupp.c
libtestsupp_s_la_API = core testsupp
libtestsupp_s_la_CFLAGS = $(core_API_CFLAGS) $(testsupp_API_CFLAGS) $(CFLAGS_POSITION_INDEPENDENT)

# Special case: on ARM platforms sl_neon.c needs NEON compilation flags.
@matrixssl_include@ makefiles/platform_specific.mk
sl_neon_c_CFLAGS=$(CFLAGS_ENABLE_NEON)

CORE_DIR=../core
@matrixssl_include@ $(CORE_DIR)/makefiles/rules.mk

CPPFLAGS_EXTRACT_MACROS=-dM
# Allows to check configuration options.
parse-config:
	echo '#include "coreConfig.h"' | $(CC) $(CFLAGS) -I config $(CPPFLAGS_EXTRACT_MACROS) -E -x c -


print:
	@$(foreach V,$(sort $(.VARIABLES)), $(if $(filter-out environment% default automatic, $(origin $V)),$(warning $V=$($V) ($(value $V)))))

# --------------- Maintainer's Section

MAINTAINERCLEANFILES = $(srcdir)/makefile.in

if MAINTAINER_MODE
$(srcdir)/makefile.am: $(srcdir)/../gen_core_makefile_am.awk $(srcdir)/../generate_makefile_am.sh
	(cd $(srcdir)/.. && ./generate_makefile_am.sh)
endif
