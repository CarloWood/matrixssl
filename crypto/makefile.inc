# This file is generated by gen_crypto_makefile_am.awk!
# All changes will be lost.
# Added to the repository anyhow in order to make ./autogen.sh work.

SRC+=$(SRC_CHACHA20POLY) $(SRC_CURVE25519) $(SRC_ED25519)
CFLAGS_ADDITIONAL_CHACHA20POLY=-I$(srcdir)/aead/chacha20poly1305ietf -I$(srcdir)
CFLAGS_ADDITIONAL_X25519=$(CFLAGS_ADDITIONAL_CHACHA20POLY) -I$(srcdir)/scalarmult/include/sodium
CFLAGS_ADDITIONAL_ED25519=$(CFLAGS_ADDITIONAL_X25519) -I$(srcdir)/crypto_sign/include/sodium -I$(srcdir)
ifdef MATRIX_DEBUG
OPT_CHACHA20POLY=-O2 -std=gnu99 -g
else
OPT_CHACHA20POLY=-O2 -std=gnu99
endif

#ifdef USE_OPENSSL_CRYPTO
ifdef USE_OPENSSL_CRYPTO
SRC+=\
	digest/digest_openssl.c \
	symmetric/symmetric_openssl.c \
	pubkey/rsa_openssl.c
endif
#endif
#ifdef USE_LIBSODIUM_CRYPTO
ifdef USE_LIBSODIUM_CRYPTO
SRC+=\
	symmetric/symmetric_libsodium.c \
	digest/digest_libsodium.c
endif
#endif

# Deal with a build flags special case:
# Comba multiplier and squaring requires all registers it can get on x86.
# These extra compilation definitions make those registers available for
# these files to use.
COMBA_MULTIPLIER_DEBUG=ON # Default on non-x86 platforms (debug build).
INTEL_32BIT=NO
ifneq (,$(findstring i386-,$(CCARCH)))
COMBA_MULTIPLIER_DEBUG=OFF
INTEL_32BIT=YES
endif
ifneq (,$(findstring i486-,$(CCARCH)))
COMBA_MULTIPLIER_DEBUG=OFF
INTEL_32BIT=YES
endif
ifneq (,$(findstring i586-,$(CCARCH)))
COMBA_MULTIPLIER_DEBUG=OFF
INTEL_32BIT=YES
endif
ifneq (,$(findstring i686-,$(CCARCH)))
COMBA_MULTIPLIER_DEBUG=OFF
INTEL_32BIT=YES
endif
ifneq (,$(findstring x86_64-,$(CCARCH)))
INTEL_64BIT=YES
endif
ifeq '$(COMBA_MULTIPLIER_DEBUG)' 'OFF'
CFLAGS_BASE:=$(CFLAGS)
endif

ifeq '$(INTEL_32BIT)' 'YES'
CFLAGS_ENABLE_SSE2=-msse2
CFLAGS_ENABLE_AVX2=-mavx2
CFLAGS_ENABLE_SSSE3=-mssse3
endif
ifeq '$(INTEL_64BIT)' 'YES'
CFLAGS_ENABLE_SSE2=-msse2
CFLAGS_ENABLE_AVX2=-mavx2
CFLAGS_ENABLE_SSSE3=-mssse3
endif

# Additional flags for CHACHA20-POLY1305 (support of SSE/AVX)

# Additional flags for AES-NI support.
# (note: only available on targets with AES-NI support detected.)

